name: Windows Builds

on: workflow_dispatch

env:
  QT_VERSION:     "6.3.2"
  MINGW_VERSION:  "win64_msvc2019_64"
  BUILD_TYPE:      Release

jobs:
  build:
    runs-on: windows-latest
    steps:
    -
      uses: actions/checkout@v3
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        aqtversion: '==2.1.*'
        host: 'windows'
        target: 'desktop'
        modules: 'qtimageformats'        
        version: ${{ env.QT_VERSION }}
        arch: ${{ env.MINGW_VERSION }}
        dir: "${{github.workspace}}/qt"
        install-deps: "true"
    -
      name: Set Qt path and refresh
      run: |
        echo "${{github.workspace}}/qt/Qt/${{ env.QT_VERSION }}/${{ env.MINGW_PATH }}/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        refreshenv
        Write-Output (Get-Command g++.exe).Path
        g++.exe --version
#    -
#      name: Check availability of libraries
#      run: |
#        ls ${{github.workspace}}/qt/Qt/${{ env.QT_VERSION }}/${{ env.MINGW_PATH }}/lib/
#    -
#      name: Check availability of binaries
#      run: |
#        ls ${{github.workspace}}/qt/Qt/${{ env.QT_VERSION }}/${{ env.MINGW_PATH }}/bin/
#    -
#      name: Prepend path
#      run: echo ":${{github.workspace}}/qt/Qt/${{ env.QT_VERSION }}/mingw73_32/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
#    -
#      name: Check QMake, CMake and make
#      run: |
#        Write-Output (Get-Command qmake.exe).Path
#        qmake.exe -version
#        Write-Output (Get-Command cmake.exe).Path
#        cmake.exe -version
#        Write-Output (Get-Command mingw32-make.exe).Path
#        mingw32-make.exe -version  
    -
      name: Configure CMake Project
      working-directory: ${{github.workspace}}\..
      env:
        CMAKE_PREFIX_PATH: ${{env.Qt6_Dir}}
      run: |
        vcvars64.bat
        cmake -A x64 -G "Visual Studio 17 2022" -H. -Bbuild ${{github.workspace}}\build\cmake -Wno-dev
  #cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G "CodeBlocks - MinGW Makefiles" -B ${{github.workspace}}\..\build ${{github.workspace}}\build\cmake
    -
      name: Build project
      working-directory: ${{github.workspace}}\..
      run: |
        cmake --build build --config ${{env.BUILD_TYPE}} --target package
#    -
#      name: Compress portable program
#      run: |
#        mkdir ${{github.workspace}}\build\all\
#        cp ${{github.workspace}}/build/RePr.exe ${{github.workspace}}\build\all\
#        cd ${{github.workspace}}\build\all\
#        windeployqt.exe RePr.exe --release
#        ls
#        Compress-Archive -Path ${{github.workspace}}\build\all\ -DestinationPath ${{github.workspace}}\build\final.zip
#    -
#      name: Release
#      uses: softprops/action-gh-release@v1
#      if: startsWith(github.ref, 'refs/tags/')
#      with:
#        files: ${{github.workspace}}/build/final.zip
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

