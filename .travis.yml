# https://VookiImageViewer.cz

language: cpp
os:
  - linux
  - osx

sudo: false
dist: trusty

services:
  - docker

compiler:
  - clang
  - gcc

arch:
  - amd64
  - arm64

env:
  - QT=latestDistroOfficial RELEASE=bionic DISTRO=ubuntu DEB=no
  - QT=latestDistroOfficial RELEASE=eoan DISTRO=ubuntu DEB=yes
  - QT=latestDistroOfficial RELEASE=stable DISTRO=debian DEB=yes
  - QT=latestDistroOfficial RELEASE=stable DISTRO=fedora DEB=no
  - BREW=

matrix:
  exclude:
  - os: osx
    arch: arm64

  - os: linux
    env: BREW=

  - os: osx
    env: QT=latestDistroOfficial RELEASE=bionic DISTRO=ubuntu DEB=no
  - os: osx
    env: QT=latestDistroOfficial RELEASE=eoan DISTRO=ubuntu DEB=yes
  - os: osx
    env: QT=latestDistroOfficial RELEASE=stable DISTRO=debian DEB=yes
  - os: osx
    env: QT=latestDistroOfficial RELEASE=stable DISTRO=fedora DEB=no

install:
  - '[ "$TRAVIS_OS_NAME" != linux ] || docker login docker.pkg.github.com --username vookimedlo --password "$packages_read_token"'
  - '[ "$TRAVIS_OS_NAME" != linux ] || docker pull docker.pkg.github.com/vookimedlo/docker-images/"$DISTRO"-qt:"$QT"_"$CC"_"$RELEASE"'
  - '[ "$TRAVIS_OS_NAME" != linux ] || docker run -d --name linux_docker --rm -ti docker.pkg.github.com/vookimedlo/docker-images/"$DISTRO"-qt:"$QT"_"$CC"_"$RELEASE" bash'
  - '[ "$TRAVIS_OS_NAME" != linux ] || ([ "$DISTRO" != ubuntu ] && [ "$DISTRO" != debian ]) || docker exec linux_docker apt-get update -qq'
  - '[ "$TRAVIS_OS_NAME" != linux ] || ([ "$DISTRO" != ubuntu ] && [ "$DISTRO" != debian ]) || docker exec linux_docker apt-get -y install libraw-dev'
  - '[ "$TRAVIS_OS_NAME" != linux ] || [ "$DISTRO" != fedora ] || docker exec linux_docker yum -y install LibRaw LibRaw-devel'
  - '[ "$TRAVIS_OS_NAME" != linux ] || docker exec linux_docker mkdir -p /root/sources/vooki-image-viewer'
  - '[ "$TRAVIS_OS_NAME" != linux ] || docker cp -L ./ linux_docker:/root/sources/vooki-image-viewer'

  - '[ "$TRAVIS_OS_NAME" != osx ] || brew update'
  - '[ "$TRAVIS_OS_NAME" != osx ] || brew install qt$BREW'
  - '[ "$TRAVIS_OS_NAME" != osx ] || brew link --force qt$BREW'
  - '[ "$TRAVIS_OS_NAME" != osx ] || export CMAKE_PREFIX_PATH=/usr/local/opt/qt/'

before_script:
  - '[ "$TRAVIS_OS_NAME" != osx ] || qmake -v'
  - '[ "$TRAVIS_OS_NAME" != osx ] || cmake --version'
  - '[ "$TRAVIS_OS_NAME" != osx ] || uname -a'

  - '[ "$TRAVIS_OS_NAME" != linux ] || ([ "$DISTRO" != ubuntu ] && [ "$DISTRO" != debian ]) || docker exec linux_docker bash -c "source /etc/profile && qmake -v"'
  - '[ "$TRAVIS_OS_NAME" != linux ] || [ "$DISTRO" != fedora ] || docker exec linux_docker bash -c "source /etc/profile && qmake-qt5 -v"'
  - '[ "$TRAVIS_OS_NAME" != linux ] || docker exec linux_docker cmake --version'
  - '[ "$TRAVIS_OS_NAME" != linux ] || docker exec linux_docker uname -a'
  - '[ "$TRAVIS_OS_NAME" != linux ] || docker exec linux_docker cat /etc/issue.net'

script:
  - '[ "$TRAVIS_OS_NAME" != osx ] || cd build/cmake/mac'
  - '[ "$TRAVIS_OS_NAME" != osx ] || mkdir build'
  - '[ "$TRAVIS_OS_NAME" != osx ] || cd build'
  - '[ "$TRAVIS_OS_NAME" != osx ] || bash -c "source /etc/profile && cmake -DCMAKE_BUILD_TYPE=Release ../../"'
  - '[ "$TRAVIS_OS_NAME" != osx ] || make'

  - '[ "$TRAVIS_OS_NAME" != linux ] || [ "$DISTRO" != fedora ] || [ "$CC" != gcc ] || docker exec linux_docker bash -c "source /etc/profile && cd /root/sources/vooki-image-viewer/build/cmake/unix && ./support/package/rpm/create-rpm-snapshot.sh"'
  - '[ "$TRAVIS_OS_NAME" != linux ] || [ "$DISTRO" != fedora ] || [ "$CC" != clang ] || docker exec linux_docker bash -c "source /etc/profile && cd /root/sources/vooki-image-viewer/build/cmake/unix && ./generate.sh && cd build && make"'
  - '[ "$TRAVIS_OS_NAME" != linux ] || [ "$DEB" != no ] || ([ "$DISTRO" != ubuntu ] && [ "$DISTRO" != debian ]) || docker exec linux_docker bash -c "source /etc/profile && cd /root/sources/vooki-image-viewer/build/cmake/unix && ./generate.sh && cd build && make"'
  - '[ "$TRAVIS_OS_NAME" != linux ] || [ "$DEB" != yes ] || docker exec linux_docker bash -c "source /etc/profile && cd /root/sources/vooki-image-viewer/ && ./debian/create-deb-snapshot.sh"'

after_script:
  - '[ "$TRAVIS_OS_NAME" != linux ] || docker stop linux_docker'
